/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define FUNC    3

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <FUNC>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// |  TAB |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ENTR |
//                    | ALT | SFT | LWR |   | RSE | SPC  | GUI |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F    &kp P      &kp B       &kp J     &kp L     &kp U     &kp Y   &kp SEMI &kp BSPC
   &kp TAB   &kp A &kp R &kp S    &kp T      &kp G       &kp M     &kp N     &kp E     &kp I   &kp O    &kp SQT
   &kp LCTRL &kp Z &kp X &kp C    &kp D      &kp V       &kp K     &kp H     &kp COMMA &kp DOT &kp FSLH &kp ENTER
                         &kp LALT &kp LSHIFT &mo LOWER   &mo RAISE &kp SPACE &kp LGUI
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   |     | PUP |  UP | PDN | HME | END  |
// |      |     |     |     | PSC | BTC |   |     | LFT | DWN | RGT |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans     &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6 &kp N7    &kp N8   &kp N9    &kp N0   &trans
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none  &kp PG_UP &kp UP   &kp PG_DN &kp HOME &kp END
   &trans     &none        &none        &none        &kp PSCRN    &bt BT_CLR     &none  &lp LEFT  &kp DOWN &kp RIGHT &none    &trans
                          	            &trans       &trans       &none          &trans &trans    &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |      |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp DEL
   &trans    &none    &none  &none    &none    &none       &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &trans    &none    &none  &none    &none    &none       &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                    	     &trans   &trans   &trans      &none     &trans    &trans
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// | F1 | F2 | F3 | F4 | F5 | F6 |   | F7 | F8 | F9 | F10 | F11 | F12 |
// |    |    |    |    |    |    |   |    |    |    |     |     |     |
// |    |    |    |    |    |    |   |    |    |    |     |     |     |
//                     |    |    |   |    |    |    |     |
                        bindings = <
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &trans &none  &none  &none  &none  &none    &none  &none  &none  &none   &none   &none
   &trans &none  &none  &none  &none  &none    &none  &none  &none  &none   &none   &trans
                        &trans &trans &trans   &trans &trans &trans
                        >;
                };

        };
};
